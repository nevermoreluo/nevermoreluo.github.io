<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nevermore Blog</title>
  
  
  <link href="https://nevermoreluo.github.io/atom.xml" rel="self"/>
  
  <link href="https://nevermoreluo.github.io/"/>
  <updated>2023-09-11T06:04:52.981Z</updated>
  <id>https://nevermoreluo.github.io/</id>
  
  <author>
    <name>Nevermore</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux service register script</title>
    <link href="https://nevermoreluo.github.io/2023/09/11/Linux-service-register-script/"/>
    <id>https://nevermoreluo.github.io/2023/09/11/Linux-service-register-script/</id>
    <published>2023-09-11T10:53:39.000Z</published>
    <updated>2023-09-11T06:04:52.981Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;工作中存在一些功能需要注册为服务，保证开机自启以及自动重启业务。其实本质上就是注册一个service unit, 但是很多同学都没搞过。为了减少一些同学的使用成本，就给了个简单脚本按步骤执行。</summary>
    
    
    
    <category term="Code" scheme="https://nevermoreluo.github.io/categories/Code/"/>
    
    
    <category term="linux" scheme="https://nevermoreluo.github.io/tags/linux/"/>
    
    <category term="shell" scheme="https://nevermoreluo.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>监听随机端口</title>
    <link href="https://nevermoreluo.github.io/2022/01/12/%E7%9B%91%E5%90%AC%E9%9A%8F%E6%9C%BA%E7%AB%AF%E5%8F%A3/"/>
    <id>https://nevermoreluo.github.io/2022/01/12/%E7%9B%91%E5%90%AC%E9%9A%8F%E6%9C%BA%E7%AB%AF%E5%8F%A3/</id>
    <published>2022-01-12T10:37:49.000Z</published>
    <updated>2023-09-11T06:04:52.981Z</updated>
    
    
    <summary type="html">&lt;p&gt;业务上存在需求，一类服务监听随机端口，并由服务发现业务管理内部分配，那么我们如何实现监听随机端口呢？&lt;/p&gt;
&lt;p&gt;实际上将端口设置为0即可在&lt;code&gt;规定&lt;/code&gt;范围内，分配一个可bind的端口</summary>
    
    
    
    <category term="Code" scheme="https://nevermoreluo.github.io/categories/Code/"/>
    
    
    <category term="c" scheme="https://nevermoreluo.github.io/tags/c/"/>
    
    <category term="cpp" scheme="https://nevermoreluo.github.io/tags/cpp/"/>
    
    <category term="socket" scheme="https://nevermoreluo.github.io/tags/socket/"/>
    
  </entry>
  
  <entry>
    <title>关于游戏同步的二三事</title>
    <link href="https://nevermoreluo.github.io/2022/01/07/%E5%85%B3%E4%BA%8E%E6%B8%B8%E6%88%8F%E5%90%8C%E6%AD%A5%E7%9A%84%E4%BA%8C%E4%B8%89%E4%BA%8B/"/>
    <id>https://nevermoreluo.github.io/2022/01/07/%E5%85%B3%E4%BA%8E%E6%B8%B8%E6%88%8F%E5%90%8C%E6%AD%A5%E7%9A%84%E4%BA%8C%E4%B8%89%E4%BA%8B/</id>
    <published>2022-01-07T12:00:17.000Z</published>
    <updated>2023-09-11T06:04:52.981Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;http://www.skywind.me/blog/archives/112&quot;&gt;网络游戏同步法则&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;定义&lt;br&gt;通常来说的状态同步，即狭义上的状态同步，即在状态发生变化时将变动的数据同步给客户端&lt;br&gt;所谓帧同步其实是指以一帧数据为单位进行同步，但是通常来说我们认为的帧同步是 锁定帧同步（或者变种）&lt;br&gt;那么广义上来说，其实存在既是帧同步又是状态同步，即以帧为单位的状态同步</summary>
    
    
    
    <category term="Code" scheme="https://nevermoreluo.github.io/categories/Code/"/>
    
    
    <category term="game" scheme="https://nevermoreluo.github.io/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>Strace</title>
    <link href="https://nevermoreluo.github.io/2022/01/07/Strace/"/>
    <id>https://nevermoreluo.github.io/2022/01/07/Strace/</id>
    <published>2022-01-07T11:38:44.000Z</published>
    <updated>2023-09-11T06:04:52.981Z</updated>
    
    
    <summary type="html">&lt;p&gt;Strace是Linux环境下用于调试诊断应用程序调用systemcall的工具。&lt;/p&gt;
&lt;p&gt;由于Strace只检测系统调用，因此Strace只是一个分析的侧面。&lt;br&gt;例如：命令&lt;code&gt;perl -e &amp;#39;while(1)&amp;#123;&amp;#125;&amp;#39;&lt;/code&gt;不会产生任何系统调用&lt;/p&gt;
&lt;p&gt;系统调用包括以下几个方面file, process, network, signal, ipc, desc， 默认将检测所有系统调用即all</summary>
    
    
    
    <category term="Code" scheme="https://nevermoreluo.github.io/categories/Code/"/>
    
    
    <category term="linux" scheme="https://nevermoreluo.github.io/tags/linux/"/>
    
    <category term="cpp" scheme="https://nevermoreluo.github.io/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>关于Core dump(核心转储)</title>
    <link href="https://nevermoreluo.github.io/2022/01/07/%E5%85%B3%E4%BA%8ECore-dump-%E6%A0%B8%E5%BF%83%E8%BD%AC%E5%82%A8/"/>
    <id>https://nevermoreluo.github.io/2022/01/07/%E5%85%B3%E4%BA%8ECore-dump-%E6%A0%B8%E5%BF%83%E8%BD%AC%E5%82%A8/</id>
    <published>2022-01-07T10:18:54.000Z</published>
    <updated>2023-09-11T06:04:52.981Z</updated>
    
    
    <summary type="html">&lt;p&gt;core dump是程序运行时，在进程收到某些信号而终止运行时，将此时进程地址空间的内容以及有关进程状态的其他信息写入一个磁盘文件。&lt;/p&gt;
&lt;p&gt;对应会产生core dump的信号  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Signal&lt;/th&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;th&gt;Comment&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;SIGQUIT&lt;/td&gt;
&lt;td&gt;Core&lt;/td&gt;
&lt;td&gt;Quit from keyboard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SIGILL&lt;/td&gt;
&lt;td&gt;Core&lt;/td&gt;
&lt;td&gt;Illegal Instruction&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SIGABRT&lt;/td&gt;
&lt;td&gt;Core&lt;/td&gt;
&lt;td&gt;Abort signal from abort&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SIGSEGV&lt;/td&gt;
&lt;td&gt;Core&lt;/td&gt;
&lt;td&gt;Invalid memory reference&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SIGTRAP&lt;/td&gt;
&lt;td&gt;Core&lt;/td&gt;
&lt;td&gt;Trace/breakpoint trap&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;我们可以通过使用gdb查core dump文件，最后崩溃时的信息，来进行debug&lt;br&gt;为了更好的查看阅读core dump文件, linux下需要进行以下配置</summary>
    
    
    
    <category term="Code" scheme="https://nevermoreluo.github.io/categories/Code/"/>
    
    
    <category term="linux" scheme="https://nevermoreluo.github.io/tags/linux/"/>
    
    <category term="c" scheme="https://nevermoreluo.github.io/tags/c/"/>
    
    <category term="cpp" scheme="https://nevermoreluo.github.io/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>Lua 源码中 l_likely, l_unlikey 是什么意思</title>
    <link href="https://nevermoreluo.github.io/2022/01/07/Lua-%E6%BA%90%E7%A0%81%E4%B8%AD-l-likely-l-unlikey-%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/"/>
    <id>https://nevermoreluo.github.io/2022/01/07/Lua-%E6%BA%90%E7%A0%81%E4%B8%AD-l-likely-l-unlikey-%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/</id>
    <published>2022-01-07T10:04:14.000Z</published>
    <updated>2023-09-11T06:04:52.981Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近在排查c++程序内部调用lua_pcall时产生&lt;code&gt;C stack overflow&lt;/code&gt;异常，&lt;br&gt;研究问题时发现lua源码中存在一些likely调用,其实在其他代码中也见到过类似的调用，&lt;br&gt;那么我们今天就来探究一下它到底是什么逻辑</summary>
    
    
    
    <category term="Code" scheme="https://nevermoreluo.github.io/categories/Code/"/>
    
    
    <category term="lua" scheme="https://nevermoreluo.github.io/tags/lua/"/>
    
    <category term="c" scheme="https://nevermoreluo.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>回退git远程提交</title>
    <link href="https://nevermoreluo.github.io/2022/01/06/%E5%9B%9E%E9%80%80git%E8%BF%9C%E7%A8%8B%E6%8F%90%E4%BA%A4/"/>
    <id>https://nevermoreluo.github.io/2022/01/06/%E5%9B%9E%E9%80%80git%E8%BF%9C%E7%A8%8B%E6%8F%90%E4%BA%A4/</id>
    <published>2022-01-06T20:40:57.000Z</published>
    <updated>2023-09-11T06:04:52.981Z</updated>
    
    
    <summary type="html">&lt;p&gt;严格意义上来说，我们并不期待撤销一个已经提交的commit（虽然我们可以）&lt;br&gt;下面给出4种解决方式，各有优缺点</summary>
    
    
    
    <category term="Code" scheme="https://nevermoreluo.github.io/categories/Code/"/>
    
    
    <category term="git" scheme="https://nevermoreluo.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>NSIS打包C# 程序</title>
    <link href="https://nevermoreluo.github.io/2022/01/06/NSIS%E6%89%93%E5%8C%85C-%E7%A8%8B%E5%BA%8F/"/>
    <id>https://nevermoreluo.github.io/2022/01/06/NSIS%E6%89%93%E5%8C%85C-%E7%A8%8B%E5%BA%8F/</id>
    <published>2022-01-06T20:13:01.000Z</published>
    <updated>2023-09-11T06:04:52.981Z</updated>
    
    
    <summary type="html">&lt;p&gt;NSIS是一个Nullsoft脚本安装系统（英语：Nullsoft Scriptable Install System，缩写：NSIS）为一个开放源代码脚本驱动的封装安装档用工具。可以用其脚本语言自定安装的流程，同时支持多种语系的安装接口。</summary>
    
    
    
    <category term="Code" scheme="https://nevermoreluo.github.io/categories/Code/"/>
    
    
    <category term="C#" scheme="https://nevermoreluo.github.io/tags/C/"/>
    
    <category term="NSIS" scheme="https://nevermoreluo.github.io/tags/NSIS/"/>
    
  </entry>
  
  <entry>
    <title>关于Tinc VPN的搭建</title>
    <link href="https://nevermoreluo.github.io/2022/01/06/VPN%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>https://nevermoreluo.github.io/2022/01/06/VPN%E7%9A%84%E6%90%AD%E5%BB%BA/</id>
    <published>2022-01-06T19:39:14.000Z</published>
    <updated>2023-09-11T06:04:52.981Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;关于&quot;&gt;&lt;a href=&quot;#关于&quot; class=&quot;headerlink&quot; title=&quot;关于&quot;&gt;&lt;/a&gt;关于&lt;/h2&gt;&lt;p&gt;Tinc 是一种相对小众的VPN方案。但是支持很多环境的安装，例如ubuntu，centos都可以用自带的包管理工具安装。</summary>
    
    
    
    <category term="Code" scheme="https://nevermoreluo.github.io/categories/Code/"/>
    
    
    <category term="VPN" scheme="https://nevermoreluo.github.io/tags/VPN/"/>
    
  </entry>
  
  <entry>
    <title>Virtualenvwrapper</title>
    <link href="https://nevermoreluo.github.io/2022/01/06/Virtualenvwrapper/"/>
    <id>https://nevermoreluo.github.io/2022/01/06/Virtualenvwrapper/</id>
    <published>2022-01-06T19:31:46.000Z</published>
    <updated>2023-09-11T06:04:52.981Z</updated>
    
    
    <summary type="html">&lt;p&gt;通过命令&lt;code&gt;pip install virtualenvwrapper&lt;/code&gt;安装</summary>
    
    
    
    <category term="Code" scheme="https://nevermoreluo.github.io/categories/Code/"/>
    
    
    <category term="python" scheme="https://nevermoreluo.github.io/tags/python/"/>
    
  </entry>
  
</feed>
